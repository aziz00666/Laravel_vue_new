'use strict';

function parseRemoteList(data) {
  var remotes = data.trim().split('\n');

  return remotes.map(function(remote) {
    remote = remote.split(/\s/);
    return {
      name: remote[0],
      url:  remote[1],
      type: remote[2].match(/[^()]+/gi)[0]
    };
  }).reduce(function(obj, cv) {
    if (!obj[cv.name]) obj[cv.name] = {};
    obj[cv.name][cv.type] = cv.url;
    return obj;
  }, {});
}

module.exports = function(repoDir) {
  repoDir.lastCommit = function() {
    var remote, branch, then;
    then = arguments[arguments.length - 1];
    remote = arguments.length > 1 ? arguments[0] : 'origin';
    branch = arguments.length > 2 ? arguments[1] : 'master';

    var command = ['log', '-1', remote + '/' + branch, '--pretty=%H'];

    return this._run(command, function(err, data) {
      return then && then(err, data.trim());
    });
  };

  repoDir.remoteList = function(then) {
    var command = ['remote', '-v'];
    return this._run(command, function(err, data) {
      return then && then(err, parseRemoteList(data));
    });
  };

  repoDir.stash = function(options, then) {
    if (typeof options === 'string') {
      options = options.split(/\s+/);
    }

    var command = ['stash'].concat(options);

    return this._run(command, function(err, data) {
      return then && then(err, data);
    });
  };


  // TEMPORARY CHANGES TO simple-git (bug fixes)
  repoDir.addRemote = function (remoteName, remoteRepo, then) {
    return this._run(['remote', 'add', remoteName, remoteRepo], function (err) {
      return then && then(err);
    });
  };

  repoDir.removeRemote = function (remoteName, then) {
    return this._run(['remote', 'remove', remoteName], function (err) {
      return then && then(err);
    });
  };
};